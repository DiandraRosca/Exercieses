//scriem un program care sa citeasca de la tast un nr intreg
//sa se creezee un meniu int cu urm opt =
//-0. iesire
//- 1. afisare nr in baza 2
//- 2. af unui mesaj in care se precizeaza daca nr e = cu o putere a lui 2
//- 3. af unui mes in care se precizeaza daca nr e mai mare cu 1 decat o put a lui 2
//- 4. af nr de biti pe 1
//- 5. af nr de biti pe 0
//- 6. af pozitiei a primului bit(cel mai din stanga) cu val 1 a nr in cazul in care nr e poz
//-7. af nr de octeti necesari pt reprezentarea nr, in cazul in care nr e poz 
//obs =se vor utilizia doar op pe BITI

#include<stdio.h>
#include<stdlib.h>

int main()
{
	int n, opt,i;
	int contor = 0;
	printf("nr e=");
	scanf("%d", &n);
	while (1)
	{
		printf("\n- 0.iesire\n");
		printf("- 1. afisarea nr in baza 2(adica in binar pe 32 de biti se face reprezentarea)\n");
		printf("- 2. af unui mesaj in care se precizeaza daca nr e = cu o putere a lui 2\n");
		printf("- 3. af unui mes in care se precizeaza daca nr e mai mare cu 1 decat o put a lui 2\n");
		printf("- 4. af nr de biti pe 1\n");
		printf("- 5. af nr de biti pe 0\n");
		printf("- 6. af pozitiei a primului bit(cel mai din stanga) cu val 1 a nr in cazul in care nr e poz\n");
		printf("- 7. af nr de octeti necesari pt reprezentarea nr, in cazul in care nr e poz \n");
		printf("opt dmnv este=");
		scanf("%d", &opt);

		switch (opt)
		{
		case 0:
			exit(1);
		case 1:
			for (i = 31; i >= 0; i--)     //afisam nr pe 32 de biti
				if ((n >> i) & 1)
					printf("1");
				else printf("0");
			break;
		case 2:
			contor = 0;
			for (i = 31; i >= 0; i--)
				if ((n >> i) & 1)
					contor++;    // contorul numara cati de 1 gasim in nr reprezentat bin, daca gasim mai multi de un 1 ins ca nr nu e put a lui 2
			if (contor == 1)
				printf("nr %d e egal cu o putere a lui 2\n",n);   //4,8
			else
				printf("nr %d nu e egal cu o putere a lui 2\n", n);  //5,6 nu s
			break;
		case 3:
			contor = 0;
			for (i = 31; i >= 1; i--)
				if ((n >> i) & 1)
					contor++;
			if (((contor == 1) && ((n & 1) == 1)))
				printf("nr %d e mai mare cu 1 decat o put a lui 2\n",n);//5
			else printf("nr  %d nu e mai mare cu 1 decat o put a lui 2\n", n);//8
			break;
		case 4:
			contor = 0;
			for (i = 31; i >= 0; i--)
				if ((n >> i) & 1)                                      //cati biti de 1 gasim
					contor++;
			printf("nr de biti de 1 pt nr %d este %d\n", n, contor);
			break;
		case 5:
			contor = 0;
			for (i = 31; i >= 0; i--)
				if ((n >> i) & 1)
					contor++;
			printf("nr de biti de 0 pt nr %d este %d\n", n, 32-contor);        //cati biti setati pe 0 sunt
			break;
		case 6:
			if (((n >> i) & 1) == 0)
				for (i = 30; i >= 0; i--)
					if (((n >> i) & 1) == 1)
					{
						printf("poz e %d\n", i+1);
						break;
					}
			break;
		case 7:
			if (((n >> i) & 1) == 0)
				for (i = 30; i >= 0; i--)
					if (((n >> i) & 1) == 1)
					{
						if (i < 8)
							printf("avem nevoie de un singur octet");
						else if(i<16)
							printf("avem nevoie de 2 octeti");
						else if (i < 24)
							printf("avem nevoie de 3 octeti");
						else 
							printf("avem nevoie de 4 octeti");
					}
			break;
		default:("val gresita");
			break;
		}
	}
	return 0;
}